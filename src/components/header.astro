---
let style1 = `
 ██████ ██   ██  █████  ████████ ██████   ██████  ████████ ███████        ██        ██████  ██   ██ ██ ██       ██████  ███████  ██████  ██████  ██   ██ ██    ██
██      ██   ██ ██   ██    ██    ██   ██ ██    ██    ██    ██             ██        ██   ██ ██   ██ ██ ██      ██    ██ ██      ██    ██ ██   ██ ██   ██  ██  ██
██      ███████ ███████    ██    ██████  ██    ██    ██    ███████     ████████     ██████  ███████ ██ ██      ██    ██ ███████ ██    ██ ██████  ███████   ████
██      ██   ██ ██   ██    ██    ██   ██ ██    ██    ██         ██     ██  ██       ██      ██   ██ ██ ██      ██    ██      ██ ██    ██ ██      ██   ██    ██
 ██████ ██   ██ ██   ██    ██    ██████   ██████     ██    ███████     ██████       ██      ██   ██ ██ ███████  ██████  ███████  ██████  ██      ██   ██    ██
`.slice(1,-1);  // trim beginning and ending newlines

let style2 = String.raw`
 $$$$$$\  $$\                  $$\     $$\                  $$\                      $$$\           $$$$$$$\  $$\       $$\ $$\                                         $$\
$$  __$$\ $$ |                 $$ |    $$ |                 $$ |                    $$ $$\          $$  __$$\ $$ |      \__|$$ |                                        $$ |
$$ /  \__|$$$$$$$\   $$$$$$\ $$$$$$\   $$$$$$$\   $$$$$$\ $$$$$$\    $$$$$$$\       \$$$\ |         $$ |  $$ |$$$$$$$\  $$\ $$ | $$$$$$\   $$$$$$$\  $$$$$$\   $$$$$$\  $$$$$$$\  $$\   $$\
$$ |      $$  __$$\  \____$$\\_$$  _|  $$  __$$\ $$  __$$\\_$$  _|  $$  _____|      $$\$$\$$\       $$$$$$$  |$$  __$$\ $$ |$$ |$$  __$$\ $$  _____|$$  __$$\ $$  __$$\ $$  __$$\ $$ |  $$ |
$$ |      $$ |  $$ | $$$$$$$ | $$ |    $$ |  $$ |$$ /  $$ | $$ |    \$$$$$$\        $$ \$$ __|      $$  ____/ $$ |  $$ |$$ |$$ |$$ /  $$ |\$$$$$$\  $$ /  $$ |$$ /  $$ |$$ |  $$ |$$ |  $$ |
$$ |  $$\ $$ |  $$ |$$  __$$ | $$ |$$\ $$ |  $$ |$$ |  $$ | $$ |$$\  \____$$\       $$ |\$$\        $$ |      $$ |  $$ |$$ |$$ |$$ |  $$ | \____$$\ $$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |
\$$$$$$  |$$ |  $$ |\$$$$$$$ | \$$$$  |$$$$$$$  |\$$$$$$  | \$$$$  |$$$$$$$  |       $$$$ $$\       $$ |      $$ |  $$ |$$ |$$ |\$$$$$$  |$$$$$$$  |\$$$$$$  |$$$$$$$  |$$ |  $$ |\$$$$$$$ |
 \______/ \__|  \__| \_______|  \____/ \_______/  \______/   \____/ \_______/        \____\__|      \__|      \__|  \__|\__|\__| \______/ \_______/  \______/ $$  ____/ \__|  \__| \____$$ |
                                                                                                                                                              $$ |                $$\   $$ |
                                                                                                                                                              $$ |                \$$$$$$  |
                                                                                                                                                              \__|                 \______/
`.slice(1,-1);  // trim beginning and ending newlines


let banner = style1;
---
<style lang="scss">
.typing {
	font-family: var(--font-mono);
	font-size: 0.8vw;
	line-height: 1;
	text-align: left;
	white-space: pre;
  margin: 2em 0;

	div {
		animation: typing 0.5s steps(var(--length)) backwards;
		overflow: hidden;
		width: calc(var(--length) * 1ch);

		&:nth-of-type(2) {
			animation-delay: 0.5s;
		}

		&:nth-of-type(3) {
			animation-delay: 1s;
		}

		&:nth-of-type(4) {
			animation-delay: 1.5s;
		}

		&:nth-of-type(5) {
			animation-delay: 2s;
		}

		&:nth-of-type(6) {
			animation-delay: 2.5s;
		}

		&:nth-of-type(7) {
			animation-delay: 3s;
		}

		&:nth-of-type(8) {
			animation-delay: 3.5s;
		}

		&:nth-of-type(9) {
			animation-delay: 4s;
		}

		&:nth-of-type(10) {
			animation-delay: 4.5s;
		}

		&:nth-of-type(11) {
			animation-delay: 5s;
		}
	}
}

:global(input#dark-mode:checked ~ main .typing div) {
  animation-name: typing2;
}

@keyframes typing {
  from {
    width: 0
  }
}

@keyframes typing2 {
  from {
    width: 0
  }
}
</style>

<div class="typing" style={`--length: ${Math.max(...banner.split("\n").map(line=>line.length))}`}>
  {banner.split("\n").map((line) => (<div>{line}</div>))}
</div>
